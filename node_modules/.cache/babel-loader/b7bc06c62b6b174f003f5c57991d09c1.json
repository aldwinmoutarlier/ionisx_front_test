{"ast":null,"code":"import _classCallCheck from \"/Users/aldwinmoutarlier/ionisx_front_test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/aldwinmoutarlier/ionisx_front_test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/aldwinmoutarlier/ionisx_front_test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/aldwinmoutarlier/ionisx_front_test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/aldwinmoutarlier/ionisx_front_test/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/aldwinmoutarlier/ionisx_front_test/src/Exercices/FinalBoss/TodoList.js\";\nimport React, { Component } from 'react';\nimport TodoItem from './TodoItem';\nimport PropTypes from 'prop-types';\n/**\n *   Clicking on a not done item should trigger onItemClick: Wrong answer\n *   Clicking on a done item should not trigger onItemClick or a parent click: Wrong answer\n */\n\nvar TodoList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TodoList, _Component);\n\n  function TodoList() {\n    _classCallCheck(this, TodoList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TodoList).apply(this, arguments));\n  }\n\n  _createClass(TodoList, [{\n    key: \"handleItemClick\",\n    value: function handleItemClick(item, event) {\n      item.done = !item.done;\n      this.forceUpdate();\n      console.log(item.done);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var items = this.props.items;\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, items.map(function (item, i) {\n        return React.createElement(TodoItem, {\n          item: item,\n          key: i,\n          onClick: item.done ? null : _this.handleItemClick.bind(_this, item),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return TodoList;\n}(Component);\n\nexport { TodoList as default };\nTodoList.propTypes = {\n  items: PropTypes.array.isRequired\n};","map":{"version":3,"sources":["/Users/aldwinmoutarlier/ionisx_front_test/src/Exercices/FinalBoss/TodoList.js"],"names":["React","Component","TodoItem","PropTypes","TodoList","item","event","done","forceUpdate","console","log","items","props","map","i","handleItemClick","bind","propTypes","array","isRequired"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAGA;;;;;IAIqBC,Q;;;;;;;;;;;;;oCACDC,I,EAAMC,K,EAAO;AACzBD,MAAAA,IAAI,CAACE,IAAL,GAAY,CAACF,IAAI,CAACE,IAAlB;AACA,WAAKC,WAAL;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,IAAI,CAACE,IAAjB;AACH;;;6BAEQ;AAAA;;AAAA,UACGI,KADH,GACa,KAAKC,KADlB,CACGD,KADH;AAEL,aAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEAA,KAAK,CAACE,GAAN,CAAU,UAACR,IAAD,EAAOS,CAAP,EAAa;AACnB,eACI,oBAAC,QAAD;AAAU,UAAA,IAAI,EAAET,IAAhB;AAAsB,UAAA,GAAG,EAAES,CAA3B;AAA8B,UAAA,OAAO,EAAET,IAAI,CAACE,IAAL,GAAY,IAAZ,GAAmB,KAAI,CAACQ,eAAL,CAAqBC,IAArB,CAA0B,KAA1B,EAAgCX,IAAhC,CAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,OAJD,CAFA,CAAR;AASH;;;;EAlBiCJ,S;;SAAjBG,Q;AAqBrBA,QAAQ,CAACa,SAAT,GAAqB;AACjBN,EAAAA,KAAK,EAAER,SAAS,CAACe,KAAV,CAAgBC;AADN,CAArB","sourcesContent":["import React, { Component } from 'react'\nimport TodoItem from './TodoItem';\nimport PropTypes from 'prop-types';\n\n\n/**\n *   Clicking on a not done item should trigger onItemClick: Wrong answer\n *   Clicking on a done item should not trigger onItemClick or a parent click: Wrong answer\n */\nexport default class TodoList extends Component {\n    handleItemClick(item, event) {\n        item.done = !item.done\n        this.forceUpdate()\n        console.log(item.done)\n    }\n\n    render() {\n        const { items } = this.props;\n        return (<ul>\n            {\n                items.map((item, i) => {\n                    return (\n                        <TodoItem item={item} key={i} onClick={item.done ? null : this.handleItemClick.bind(this, item)}/>\n                    )\n                })\n            }\n        </ul>);\n    }\n}\n\nTodoList.propTypes = {\n    items: PropTypes.array.isRequired,\n}\n"]},"metadata":{},"sourceType":"module"}